	#trimmed_file = expand(resultpath+'03_FILTERED_TRIMMED/{barcode}_filtered_trimmed.fastq',barcode=BARCODE),
		#converted_fastq = expand(resultpath+"FASTA/{barcode}.fasta", barcode=BARCODE),
		#ref_rep=resultpath+"00_SUPDATA/REFSEQ/",
		R_data = expand(resultpath+"04_BLASTN_ANALYSIS/{barcode}_fmt.txt" ,barcode=BARCODE),
		#R_data = expand(resultpath+"04_BLASTN_ANALYSIS/{barcode}_fmt.txt" ,barcode=BARCODE),
		#merged_data = resultpath+"04_BLASTN_ANALYSIS/ALL_refcount.tsv"
		######## FINAL OUTPUTS ########		
		#blastn_result=expand(resultpath+"04_BLASTN_ANALYSIS/{barcode}_blastnR.tsv",barcode=BARCODE),
		#summ_multiinf = resultpath+"04_BLASTN_ANALYSIS/SUMMARY_Multi_Infection.tsv",
		summ_multiinf = resultpath+"04_BLASTN_ANALYSIS/SUMMARY_Multi_Infection.tsv",


rule merging_fastq:
@@ -226,38 +227,41 @@
		"env/blast.yaml"               
	shell:
		"""
		blastn -db {params.database_path} -query {input.fasta_file} -outfmt 6 -out {output.R_data} -num_threads {threads}
		blastn -db {params.database_path} -query {input.fasta_file} -outfmt "6 qseqid sseqid bitscore" -out {output.R_data} -num_threads {threads}
		"""   

rule blastn_analysis:
	message:
		"Computing the majoritary reference for {wildcards.barcode}_nonhuman.fastq and checking multi-infection case above the given threshold ({MI_cutoff}%) using R."
rule count_refmatching:
	input:
		R_data = rules.blastn_ref.output.R_data ,
		ref_table = rules.split_reference.output.ref_rep,
	output:
		ref_ratio_plot = resultpath+"04_BLASTN_ANALYSIS/{barcode}_ratio_plot.png",
		ref_count_plot = resultpath+"04_BLASTN_ANALYSIS/{barcode}_count_plot.png",
		multi_inf_table = temp(resultpath+"04_BLASTN_ANALYSIS/{barcode}_MI.tsv") ,
		ref_count = temp(resultpath+"04_BLASTN_ANALYSIS/{barcode}_refcount.tsv"),
		blastn_result = resultpath+"04_BLASTN_ANALYSIS/{barcode}_blastnR.tsv"
	params:
		analyse=database_name
	conda:
		"env/Renv.yaml"          
		"env/Renv.yaml"     
	shell:
		"""
		Rscript script/Blastn_analysis_MI.R {input.R_data} \
		Rscript script/count_ref.R {input.R_data} \
			{input.ref_table}R_table_analysis.csv \
			{output.blastn_result} {output.ref_ratio_plot} \
			{MI_cutoff} {wildcards.barcode} {output.multi_inf_table} {output.ref_count_plot}
			{wildcards.barcode} \
			{output.ref_count} \
			{output.blastn_result}
		"""  

rule summ_multiinf:
	message:
		"Store MI results in SUMMARY_Multi_Infection.tsv ."
rule MI_analysis:
	input:
		multi_inf_table = expand(rules.blastn_analysis.output.multi_inf_table,barcode=(BARCODE))
		count_ref_data = expand(rules.count_refmatching.output.ref_count,barcode=BARCODE)
	output:
		merged_data = temp(resultpath+"04_BLASTN_ANALYSIS/ALL_refcount.tsv"),
		plot_pdf = resultpath+"04_BLASTN_ANALYSIS/read_repartition.pdf",
		summ_multiinf = resultpath+"04_BLASTN_ANALYSIS/SUMMARY_Multi_Infection.tsv"
	conda:
		"env/Renv.yaml"   
	shell:
		"cat {input} > {output} "
		"""
		cat {input.count_ref_data} > {output.merged_data}
		Rscript script/MI_analysis.R {output.merged_data} \
			{MI_cutoff} \
			{output.plot_pdf} \
			{output.summ_multiinf}
		""" 



picard AddOrReplaceReadGroups \
    I= /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV_PARIS/barcode02.bam \
    O= /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV_PARIS/barcode02_picard.bam \
    RGID=4 \
    RGLB=lib1 \
    RGPL=illumina \
    RGPU=unit1 \
    RGSM=20

samtools sort /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV_PARIS/barcode02_picard.bam > /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV_PARIS/barcode02_p_sorted.bam
samtools index /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV_PARIS/barcode02_p_sorted.bam

picard CreateSequenceDictionary \
    R= /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV_PARIS/REFSEQ/P3_GTE.fasta \
    O= /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV_PARIS/REFSEQ/P3_GTE.dict

gatk --java-options "-Xmx10g" HaplotypeCaller  \
    -R /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV_PARIS/REFSEQ/P3_GTE.fasta \
    -ploidy 1 \
    -I /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV_PARIS/barcode02_p_sorted.bam \
    -O /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV_PARIS/barcode02_gatk.vcf

gatk VariantFiltration \
   	-R /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV/REFSEQ/P3_GTF.fasta \
   	-V /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/barcode02_gatk.vcf \
   	-O /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/barcode02_gatk_filter.vcf \
   	--filter-expression "QD < 2.0 || FS > 60.0 || MQ < 40.0 || MQRankSum < -12.5 || ReadPosRankSum < -8.0" \
   	--filter-name "Standard" 

gunzip -c {output.vcf_filt} > {output.vcf_filt_extract}
sed '/^##/d' {output.vcf_filt_extract} | sed 's/#//' > {output.vcf_r}



#nanopolish
/srv/nfs/ngs-stockage/NGS_Virologie/CCharre/MinION_HBV/3_Last_HBV_Analyses_guppyv3.5.2/last_HBV_FAST5/fast5
/srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/DATA_HBV/sequencing_summary_FAM95971_c324351c.txt

#Sub sampling
seqtk sample /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV_PARIS/FILTERED/barcode02_bestref.fastq 200 \
    > /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV_PARIS/barcode02_downsampled.fastq

./nanopolish index \
     --directory /srv/nfs/ngs-stockage/NGS_Virologie/CCharre/MinION_HBV/1_Data_Paris_guppyv3.5.2AnalysesLaureBoizeau_RefINTS/fast5_pass \
     --sequencing-summary /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/DATA_HBV_PARIS/VIRO_PROTON_20190228_FAK61213_MN30059_sequencing_run_pool5VHB_83798_sequencing_summary.txt \
     /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV_PARIS/barcode02_downsampled.fastq

minimap2  -a -x map-ont /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV/REFSEQ/P3_GTF.fasta \
    /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV/FILTERED/barcode02_bestref.fastq \
    > /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/barcode02.sam

samtools sort /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/barcode02.sam \
    > /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/barcode02.bam

samtools index /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/barcode02.bam

nohup ./nanopolish variants \
    --ploidy 1 \
    --reads /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV/FILTERED/barcode02_bestref.fastq \
    --bam /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/barcode02.bam \
    --genome /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV/REFSEQ/P3_GTF.fasta \
    --threads 8 \
    --outfile /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/testBC02_nanopolish.vcf &

#test medaka

cd /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV_PARIS/
medaka consensus BAM/barcode01_sorted.bam prout.hdf
medaka variant REFSEQ/P3_GTA.fasta prout.hdf kakakipu.vcf.tmp
medaka tools annotate kakakipu.vcf.tmp REFSEQ/P3_GTA.fasta BAM/barcode01_sorted.bam zizipoilu.vcf
bcftools query \
    --format '%CHROM\t%POS\t%REF\t%FIRST_ALT\t%QUAL\t%TYPE\t%DP\n'\
    -i 'QUAL>30 && DP>75' zizipoilu.vcf > zizi_filtered.vcf





#medaka:
medaka_variant -f /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/save_result/RESULT_HDV/REFSEQ/P4_HDV5.fasta \
     -i /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/save_result/RESULT_HDV/BAM/barcode03_sorted.bam \
     -o /srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/save_result/RESULT_HDV/VCF/barcode03


#test callVarBam
clair.py callVarBam  \
    --threshold 0.5 \
    --haploid_precision \
    --chkpnt_fn "ont/model" \
    --ref_fn "/srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV/REFSEQ/P3_GTJ.fasta" \
    --bam_fn "/srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV/BAM/barcode02_sorted.bam" \
    --ctgName "P3_GTJ" \
    --sampleName "barcode03" \
    --call_fn "/srv/nfs/ngs-stockage/NGS_Virologie/HadrienR/CARO_PIPELINE/RESULT_HBV/barcode02_testcutoffFA.vcf"

